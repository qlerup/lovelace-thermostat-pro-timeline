name: Mark issue as awaiting response on maintainer comment

on:
  issue_comment:
    types: [created]

jobs:
  mark-awaiting:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    env:
      # Den/de brugere hvis kommentarer skal starte nedtælling
      ALLOWED_STARTERS: "qlerup"
      AWAIT_LABEL: "awaiting-response"
      GRACE_DAYS: "3"
    steps:
      - name: Add "awaiting-response" on maintainer comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue = context.payload.issue;
            const comment = context.payload.comment;

            // Ignorer PR-kommentarer – kun issues
            if (issue.pull_request) return;

            const allowed = new Set((process.env.ALLOWED_STARTERS || "")
              .split(",").map(s => s.trim().toLowerCase()).filter(Boolean));
            const commenter = (comment.user?.login || "").toLowerCase();

            // Hvis listen er tom, default til repo-ejer
            const isAllowed = allowed.size === 0
              ? commenter === owner.toLowerCase()
              : allowed.has(commenter);

            if (!isAllowed) {
              core.info(`@${commenter} er ikke i ALLOWED_STARTERS – ignorerer.`);
              return;
            }

            // Opret label hvis den ikke findes
            async function ensureLabel(name, color, description) {
              try {
                await github.rest.issues.getLabel({ owner, repo, name });
              } catch (e) {
                if (e.status === 404) {
                  await github.rest.issues.createLabel({ owner, repo, name, color, description });
                } else { throw e; }
              }
            }

            await ensureLabel(process.env.AWAIT_LABEL, 'fbca04', 'Waiting for reporter response');

            // Tilføj label hvis ikke allerede sat
            const existing = (issue.labels || []).map(l => typeof l === 'string' ? l : l.name);
            if (!existing.includes(process.env.AWAIT_LABEL)) {
              await github.rest.issues.addLabels({
                owner, repo, issue_number: issue.number,
                labels: [process.env.AWAIT_LABEL]
              });
            }

            // Læg en markerings-kommentar med tidsstempel (bruges af sweep)
            const nowIso = new Date().toISOString();
            await github.rest.issues.createComment({
              owner, repo, issue_number: issue.number,
              body: `Marked as **awaiting response** by @${comment.user.login}. If there's no reply, this issue will auto-close in **${process.env.GRACE_DAYS} day(s)**.\n\n<!-- awaiting:start:${nowIso} -->`
            });

            core.info(`Marked #${issue.number} as awaiting-response.`);
